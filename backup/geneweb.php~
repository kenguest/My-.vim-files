<?php
/**
 * geneweb.php
 * 16-Aug-2011
 *
 * PHP Version 5
 *
 * @category geneweb
 * @package  geneweb
 * @author   Ken Guest <ken.guest@blacknight.com>
 * @license  GPL (see http://www.gnu.org/licenses/gpl.txt)
 * @version  CVS: <cvs_id>
 * @link     geneweb.php
 * @todo
*/


require_once 'HTTP/Request2.php';

class Services_Geneweb_Exception extends Exception { };

class Services_Geneweb {

    /**
     * Default config settings
     * @var array
     */
    protected $config = array(
        'server'      => 'http://127.0.0.1',
		'port'		  => '2317',
		'database'    => null,
        'User-Agent'  => 'Services_Geneweb',
        'adapter'     => 'HTTP_Request2_Adapter_Socket',
    );


    function __construct($config = array())
    {
		if ($config == array()) {
			$config = $this->config;
		}
        $this->setConfig($config);
    }

    function setConfig($config)
    {
		$server_set = false;
        if (is_array($config)) {
            foreach ($config as $key=>$value) {
                if (!array_key_exists($key, $this->config)) {
                    throw new Services_Geneweb_Exception("Unknown config");
                }
                switch($key){
                case 'server':
                    $this->setServer($value);
					$server_set = true;
                    break;
                default:
                    $this->config[$key] = $value;
                }
            }
        }
		if ($server_set == false) {
			$this->setServer($this->server);

		}
    }

    function getResponse($url)
    {
        $response = null;
        $eMsg = null;

        $request = new HTTP_Request2(
            $url,
            HTTP_Request2::METHOD_GET,
            array('adapter' => $this->config['adapter'])
        );

        $request->setHeader('User-Agent', $this->config['User-Agent']);
        try {
            $response = $request->send();
            if (200 == $response->getStatus()) {
                return $response;
            } else {
                $eMsg = 'Unexpected HTTP status: '
                    . $response->getStatus() . ' '
                    . $response->getReasonPhrase();
            }
        } catch (HTTP_Request2_Exception $e) {
            throw new Services_Geneweb_Exception($e->getMessage(), $e);
        }
        if ($eMsg != null) {
            throw new Services_Geneweb_Exception($eMsg);
        }
    }

	public function setServer($server)
	{
        $this->server = $server;
	}

	public function get() {
		$entries = array();
		for ($month = 1; $month <= 12; $month ++) {
			$url = $this->server . ':' . $this->config['port']. '/'
			. $this->config['database']. '?m=AN&v=' . $month;
			$response = $this->getResponse($url);
			$doc = new DOMDocument();
			$body = $response->getBody();
			$doc->loadHTML($body);
			$title = $doc->getElementsByTagName('title');
			$dayEntries = array();
			foreach($doc->getElementsByTagName('li') as $el) {
				$nV = (trim($el->nodeValue));
				if (preg_match('/^[0-9].*/', $nV)) {
					$dayEntries[] = $nV;
				}
			}
			$entries[$month] = $this->parse_entries($dayEntries);
		}
		return $entries;
	}

	private function parse_entries($dayEntries) {
		$entries = array();
		foreach($dayEntries as $entry) {
			$lines = explode( "\n", $entry );
			$day = $lines[0];
			$persons = count($lines) / 4;
			for ($p = 0; $p < $persons; $p++) {
				$i = $p * 4;
				$entries[] = array(
					'day' => $day,
					'name' => $lines[$i + 2],
					'year' => trim($lines[$i + 3]),
				);
			}
		}
		return $entries;
	}
}

$g = new Services_Geneweb();
//$g->setConfig(array('database' => 'roglo', 'port' => 80, 'server' => 'http://roglo.eu'));
$g->setConfig(array('database' => 'guest'));
$months = $g->get();
$exclude = array('Armitage', 'Bill Smith', 'Fogarty', 'Ena Hodgins', 'Ruskell',
'Marina Gill', 'Lorelle', 'Jean Thomas', 'Mooney', 'Higgs', 'Ralph', 'Rowe',
'Cairns','Shep','Culbert','Gough','Clarke','Davis','Hayes', 'Jordan', 'Thomas',
'Mary Guest',' Stanley','Stone', 'Kerry', 'Leslie', 'Goulding', 'Wellwood',
'Rona', 'Bray','Tutty', 'Gunst', 'Crawford', 'Leo', 'Hamilton', 'Maguire',
'Komass', 'Bell' , 'Fanny');
foreach($months as $key=>$month) {
	echo "MONTH $key\n";
	foreach($month as $date) {

		$exc = null;
		foreach($exclude as $term) {
			if (strpos($date['name'], $term) !== false) {
				$exc = true;
			}
		}
		if ($exc === true) {
			continue;
		}
		$age = strftime('%Y')  -  $date['year'] ;
		echo $date['day'] . ' ' . $date['name'] . ' (age: ' . $age . ")\n";
	}
}
?>
